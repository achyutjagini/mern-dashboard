
The spread operator(...) in JavaScript has several use cases. 
Here are some common scenarios where the spread operator is useful:

Copying Arrays and Objects: The spread operator can create a shallow copy of an array 
or object.It spreads the elements or properties of the original array or object 
into a new one.For example:


const originalArray = [1, 2, 3];
const newArray = [...originalArray]; // creates a copy of the original array
Similarly, for objects:


const originalObject = { name: 'John', age: 30 };
const newObject = { ...originalObject }; // creates a copy of the original object


Merging Arrays: The spread operator can merge multiple arrays into a single array.
It expands each array element into individual elements of the resulting array.
const array1 = [1, 2, 3];
const array2 = [4, 5, 6];
const mergedArray = [...array1, ...array2]; // merges the arrays into a single array


Merging Objects: The spread operator can merge multiple objects
into a single object.It spreads the properties of each object into
the resulting object.If there are duplicate properties, the rightmost
 object's value overrides the previous ones. For example


const object1 = { name: 'John', age: 30 };
const object2 = { address: '123 Main St', age: 31 };
const mergedObject = { ...object1, ...object2 }; // merges the objects into a single object


Passing Arguments to Functions: The spread operator can be used to pass an array's elements as individual 
arguments to a function. For example:

const numbers = [1, 2, 3];
const sum = (a, b, c) => a + b + c;
const result = sum(...numbers); // equivalent to sum(1, 2, 3)

Destructuring Arrays and Objects: The spread operator can be used within destructuring 
assignments to capture remaining elements or properties.For example:


const [first, ...rest] = [1, 2, 3, 4, 5]; // first = 1, rest = [2, 3, 4, 5]

const { name, ...details } = { name: 'John', age: 30, address: '123 Main St' };
// name = 'John', details = { age: 30, address: '123 Main St' }
These are some of the common use cases of the spread operator in JavaScript.It provides 
a concise and powerful way to work with arrays, objects, and function arguments by 
expanding or spreading their elements or properties.